<?php

use JeroenDesloovere\VCard\VCardParser;
use Pho\Kernel\Kernel;
use Psr\Log\LoggerInterface;

class Migration
{
    protected $communityDir;
    protected $kernel;
    protected $logger;

    public function __construct($communityDir, Kernel $kernel, LoggerInterface $logger)
    {
        $this->communityDir = $communityDir;
        $this->kernel = $kernel;
        $this->logger = $logger;
    }

    public function migrate()
    {
        echo 'migrate';
        $this->migrateMember();
    }

    public function migrateMember()
    {
        $parser = VCardParser::parseFromFile($this->communityDir . '/Members.vcf');
        foreach ($parser as $parsed) {
//            var_dump($parsed);
            $fullName = $parsed->fullname;
            list($firstName, $lastName) = explode(' ', $fullName, 2);
//    $username = $firstName . $lastName;
            $username = strtolower(str_replace(' ', '', $fullName)) . rand(10, 99);
            $email = $username . "@anonymous.gr.ps";
            $password = bin2hex(random_bytes(3));
            try {
                $user = new \PhoNetworksAutogenerated\User($this->kernel, $this->kernel->graph(), $username, $email, $password);
            } catch (\Exception $ex) {
                $this->logger->error("Exception occurred for user: $fullName");
            }
        }
    }
}
